pipeline {
    agent { label 'jdk11-mvn3.8.4' }
    triggers {
        upstream(upstreamProjects: 'fordemo', threshold: hudson.model.Result.SUCCESS)
        cron('30 */2 * * 0,6')
        pollSCM('15 */1 * * 1-5')
    }
    parameters {
        choice(name: 'BRANCH_TO_BUILD', choices: ['scripedpipe', 'declarativepipe', 'master'], description: 'to build')
        string(name: 'MAVEN_GOAL', defaultValue: 'clean package', description: 'for run')
    }
    stages {
        stage('get code') {
            steps {
                git 'https://github.com/nagaraju0/java11-examples.git'
            }
        }
        stage('build') {
            steps {
                sh '/usr/local/apache-maven-3.8.4/bin/mvn clean package'
            }
        }
        stage('archive') {
            steps {
                archiveArtifacts artifacts: 'target/*.jar', followSymlinks: false
            }
        }
        stage('publish test results') {
            steps {
                junit '**/TEST-*.xml'
            }
        }
    }
    post {
        always {
            mail from: "abbaigarimanavadu77@gmail.com",
                to: 'nagarajucivil011@gmail.com',
                subject: "Status of the pipeline ${currentBuild.fullDisplayName}",
                body: "${env.BUILD_URL} has a result ${currentBuild.result}"
        }
        stage("build & SonarQube analysis") {
            steps {
                withSonarQubeEnv(installationName:'SONAR_9.2.1', envOnly: true, credentialsId: 'SONAR_TOKEN') {
                    sh "/usr/local/apache-maven-3.8.4/bin/mvn clean package sonar:sonar"
                                         echo "${env.SONAR_HOST_URL}"
                }
            }
        }
    }

}